{"version":3,"sources":["redux/contacts/contactsActions.js","redux/contacts/contactsOperations.js","redux/contacts/contactsSelectors.js","contexts/ThemeContext.js","components/hoc/withTheme.js","components/Filter.js","components/FilterContainer.js","components/Layout.js","components/Notification.js","components/ContactForm.js","components/ContactFromContainer.js","components/TextNotification.js","components/ContactList/ListItem.js","components/ContactList/ListItemContainer.js","components/ContactList/ContactList.js","components/ContactList/ContactListContainer.js","components/Header.js","components/Spinner.js","components/App.js","components/AppContainer.js","redux/contacts/contactsReducer.js","redux/store.js","index.js","components/transitions/scale.module.css","components/transitions/slideNotice.module.css","components/transitions/slideItem.module.css","components/transitions/slideTitle.module.css"],"names":["fetchExistContactsRequest","createAction","fetchExistContactsSuccess","fetchExistContactsError","addContactRequest","addContactSuccess","addContactError","removeContactRequest","removeContactSuccess","removeContactError","changeFilter","axios","defaults","baseURL","headers","common","post","addContact","name","number","dispatch","contactsActions","then","data","catch","error","fetchExistContacts","get","removeContact","id","delete","message","getContacts","contacts","items","getFilter","filter","getLoading","loading","getError","getVisibleContacts","createSelector","toLowerCase","includes","getTaskById","state","contactId","find","themeConfig","light","mainBGColor","contentColor","mainShadowBox","inputColor","messageColor","dark","Context","createContext","ThemeContext","toggleTheme","theme","config","setState","children","this","props","Provider","value","Component","Consumer","WithTheme","WrappedComponent","ctx","Container","styled","div","shadow","Label","label","Input","input","backGroundColor","Filter","onChangeFilter","appear","CSSTransition","timeout","classNames","scaleTransition","in","unmountOnExit","type","onChange","target","FilterContainer","toAppear","toUnAppear","length","prevProps","prevState","mapDispatchToProps","connect","contactsSelectors","withThemeContext","Background","color","Text","p","Notification","apearNotice","slideNoticeTransition","Form","form","css","isValid","Button","button","ErrorText","ContactForm","notice","hasError","initialValues","validate","values","errors","onSubmit","setSubmitting","resetForm","touched","handleChange","handleBlur","handleSubmit","isSubmitting","onBlur","disabled","ContactFormContainer","onAddContact","contact","setTimeout","test","ContactsOperations","Item","li","Name","Number","ListItem","onRemoveContact","onClick","ownProps","contactsOperations","List","ul","ContactList","visibleContacts","TransitionGroup","component","map","key","slideItemTransition","HeaderContenet","header","Title","h1","LabelOfSwitch","span","Slider","text","slideTitleTransition","checked","SpinnerContainer","Spinner","height","width","App","isLoadingContacts","AppContainer","onFetchExistContacts","createReducer","payload","_","contactsReducer","combineReducers","store","configureStore","reducer","ReactDOM","render","document","querySelector","module","exports"],"mappings":"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","file":"static/js/main.6e76fcbf.chunk.js","sourcesContent":["import { createAction } from '@reduxjs/toolkit';\r\n\r\nconst fetchExistContactsRequest = createAction('contacts/fetchExistRequest');\r\nconst fetchExistContactsSuccess = createAction('contacts/fetchExistSuccess');\r\nconst fetchExistContactsError = createAction('contacts/fetchExistError');\r\n\r\nconst addContactRequest = createAction('contacts/addRequest');\r\nconst addContactSuccess = createAction('contacts/addSuccess');\r\nconst addContactError = createAction('contacts/addError');\r\n\r\nconst removeContactRequest = createAction('contacts/removeRequest');\r\nconst removeContactSuccess = createAction('contacts/removeSuccess');\r\nconst removeContactError = createAction('contacts/removeError');\r\n\r\nconst changeFilter = createAction('filter/change');\r\n\r\nexport default {\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  fetchExistContactsRequest,\r\n  fetchExistContactsSuccess,\r\n  fetchExistContactsError,\r\n  removeContactRequest,\r\n  removeContactSuccess,\r\n  removeContactError,\r\n  changeFilter,\r\n};\r\n","import axios from 'axios';\r\nimport contactsActions from './contactsActions';\r\n\r\nconst AUTH_TOKEN =\r\n  'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI1ZTg2MjVhMjkyYWE0MDAwMTc1NmViNGIiLCJpYXQiOjE1ODU4NDk3NjJ9.1Om75vMwZ92vQ2qS5U7ctfC6Kgjtlmy2fuwt_cgIrbI';\r\n\r\naxios.defaults.baseURL = 'https://goit-phonebook-api.herokuapp.com/';\r\naxios.defaults.headers.common['Authorization'] = AUTH_TOKEN;\r\naxios.defaults.headers.post['Content-Type'] = 'application/json';\r\n\r\nconst fetchExistContacts = () => dispatch => {\r\n  dispatch(contactsActions.fetchExistContactsRequest());\r\n\r\n  axios\r\n    .get('/contacts')\r\n    .then(({ data }) =>\r\n      dispatch(contactsActions.fetchExistContactsSuccess(data)),\r\n    )\r\n    .catch(error => dispatch(contactsActions.fetchExistContactsError(error)));\r\n};\r\n\r\nconst addContact = ({ name, number }) => dispatch => {\r\n  dispatch(contactsActions.addContactRequest());\r\n\r\n  axios\r\n    .post('/contacts', { name, number })\r\n    .then(({ data }) => dispatch(contactsActions.addContactSuccess(data)))\r\n    .catch(error => dispatch(contactsActions.addContactError(error)));\r\n};\r\n\r\nconst removeContact = id => dispatch => {\r\n  dispatch(contactsActions.removeContactRequest());\r\n\r\n  axios\r\n    .delete(`/contacts/${id}`)\r\n    .then(() => dispatch(contactsActions.removeContactSuccess(id)))\r\n    .catch(error =>\r\n      dispatch(contactsActions.removeContactError(error.message)),\r\n    );\r\n};\r\n\r\nexport default {\r\n  addContact,\r\n  fetchExistContacts,\r\n  removeContact,\r\n};\r\n","import { createSelector } from '@reduxjs/toolkit';\r\n\r\nconst getLoading = ({ contacts }) => contacts.loading;\r\nconst getContacts = ({ contacts }) => contacts.items;\r\nconst getFilter = ({ contacts }) => contacts.filter;\r\nconst getError = ({ contacts }) => contacts.error;\r\n\r\nconst getVisibleContacts = createSelector(\r\n  [getContacts, getFilter],\r\n  (contacts, filter) => {\r\n    return contacts.filter(({ name }) =>\r\n      name.toLowerCase().includes(filter.toLowerCase()),\r\n    );\r\n  },\r\n);\r\n\r\nconst getTaskById = createSelector(\r\n  [(state, contactId) => contactId, getContacts],\r\n  (contactId, contacts) => contacts.find(({ id }) => id === contactId),\r\n);\r\n\r\nexport default {\r\n  getLoading,\r\n  getContacts,\r\n  getFilter,\r\n  getError,\r\n  getVisibleContacts,\r\n  getTaskById,\r\n};\r\n","import React, { Component, createContext } from 'react';\r\n\r\nconst themeConfig = {\r\n  light: {\r\n    mainBGColor: 'snow',\r\n    contentColor: '#1d2bcc',\r\n    mainShadowBox: '0px 2px 8px -3px rgba(0, 0, 0, 0.75)',\r\n    inputColor: 'snow',\r\n    messageColor: 'black',\r\n  },\r\n\r\n  dark: {\r\n    mainBGColor: '#333333',\r\n    contentColor: '#ccc',\r\n    mainShadowBox: '0px 0px 8px 1px rgba(255, 255, 255, 0.75)',\r\n    inputColor: '#e0e0e0',\r\n    messageColor: '#ccc',\r\n  },\r\n};\r\n\r\nconst Context = createContext(themeConfig.light);\r\n\r\nclass ThemeContext extends Component {\r\n  static Consumer = Context.Consumer;\r\n\r\n  toggleTheme = () => {\r\n    const { theme, config } = this.state;\r\n    this.setState({\r\n      theme: theme === 'dark' ? 'light' : 'dark',\r\n      config:\r\n        config === themeConfig.light ? themeConfig.dark : themeConfig.light,\r\n    });\r\n  };\r\n\r\n  state = {\r\n    theme: 'light',\r\n    toggleTheme: this.toggleTheme,\r\n    config: themeConfig.light,\r\n  };\r\n\r\n  render() {\r\n    const { children } = this.props;\r\n    return (\r\n      <Context.Provider\r\n        value={{\r\n          ...this.state,\r\n        }}\r\n      >\r\n        {children}\r\n      </Context.Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ThemeContext;\r\n","import React from 'react';\r\nimport ThemeContext from '../../contexts/ThemeContext';\r\n\r\nconst WithTheme = WrappedComponent => {\r\n  return function WithThemeContext(props) {\r\n    return (\r\n      <ThemeContext.Consumer>\r\n        {ctx => <WrappedComponent {...props} theme={ctx} />}\r\n      </ThemeContext.Consumer>\r\n    );\r\n  };\r\n};\r\n\r\nexport default WithTheme;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { CSSTransition } from 'react-transition-group';\r\nimport scaleTransition from './transitions/scale.module.css';\r\n\r\nconst Container = styled.div`\r\n  margin-bottom: 3rem;\r\n  max-width: 54rem;\r\n  box-shadow: ${props => props.shadow};\r\n  padding: 1.4rem 1.6rem;\r\n  background-color: snow;\r\n`;\r\n\r\nconst Label = styled.label`\r\n  font-size: 2rem;\r\n  cursor: pointer;\r\n`;\r\n\r\nconst Input = styled.input`\r\n  font-size: 2.2rem;\r\n  width: 100%;\r\n  margin-top: 0.4rem;\r\n  padding: 1.4rem 1.2rem 1.2rem;\r\n  border-radius: 0.6rem;\r\n  background-color: ${props => props.backGroundColor};\r\n\r\n  &:focus {\r\n    border-color: #1d2bcc;\r\n  }\r\n`;\r\n\r\nfunction Filter({ value, onChangeFilter, theme, appear }) {\r\n  return (\r\n    <CSSTransition\r\n      timeout={250}\r\n      classNames={scaleTransition}\r\n      in={appear}\r\n      unmountOnExit\r\n    >\r\n      <Container shadow={theme.config.mainShadowBox}>\r\n        <Label>\r\n          Find contacts by name\r\n          <Input\r\n            backGroundColor={theme.config.inputColor}\r\n            type=\"text\"\r\n            value={value}\r\n            onChange={({ target: { value } }) => onChangeFilter(value)}\r\n          />\r\n        </Label>\r\n      </Container>\r\n    </CSSTransition>\r\n  );\r\n}\r\n\r\nexport default Filter;\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport contactsActions from '../redux/contacts/contactsActions';\r\nimport contactsSelectors from '../redux/contacts/contactsSelectors';\r\nimport withThemeContext from './hoc/withTheme';\r\nimport Filter from './Filter';\r\n\r\nclass FilterContainer extends Component {\r\n  state = {\r\n    appear: false,\r\n  };\r\n\r\n  componentDidMount() {\r\n    const { contacts } = this.props;\r\n    if (contacts.length <= 1) {\r\n      return;\r\n    }\r\n    this.setState({\r\n      appear: true,\r\n    });\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (prevProps.contacts.length !== this.props.contacts.length) {\r\n      const { contacts } = this.props;\r\n      if (contacts.length > 1) {\r\n        return this.toAppear();\r\n      }\r\n      if (contacts.length <= 1) {\r\n        return this.toUnAppear();\r\n      }\r\n    }\r\n  }\r\n\r\n  toAppear = () => {\r\n    this.setState({\r\n      appear: true,\r\n    });\r\n  };\r\n\r\n  toUnAppear = () => {\r\n    this.setState({\r\n      appear: false,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { appear } = this.state;\r\n    return <Filter {...this.props} appear={appear} />;\r\n  }\r\n}\r\n\r\n// const mapDispatchToProps = dispatch => {\r\n//   return {\r\n//     onChangeFilter: str => dispatch(filterActions.changeFilter(str)),\r\n//   };\r\n// };\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    contacts: contactsSelectors.getContacts(state),\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  onChangeFilter: contactsActions.changeFilter,\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps,\r\n)(withThemeContext(FilterContainer));\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport withThemeContext from './hoc/withTheme';\r\n\r\nconst Background = styled.div`\r\n  padding-top: 3rem;\r\n  width: 100%;\r\n  height: 100vh;\r\n  background-color: ${props => props.color};\r\n`;\r\n\r\nconst Container = styled.div`\r\n  margin: 0 auto;\r\n  max-width: 56rem;\r\n`;\r\n\r\nconst Layout = ({ children, theme }) => (\r\n  <Background color={theme.config.mainBGColor}>\r\n    <Container>{children}</Container>\r\n  </Background>\r\n);\r\n\r\nexport default withThemeContext(Layout);\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { CSSTransition } from 'react-transition-group';\r\nimport slideNoticeTransition from './transitions/slideNotice.module.css';\r\n\r\nconst Container = styled.div`\r\n  background-color: red;\r\n  border-radius: 0.8rem;\r\n  position: fixed;\r\n  top: 5rem;\r\n  right: 0;\r\n`;\r\n\r\nconst Text = styled.p`\r\n  display: inline-block;\r\n  margin: 0 auto;\r\n  color: snow;\r\n  padding: 1.4rem;\r\n  font-size: 3rem;\r\n`;\r\n\r\nfunction Notification({ message, apearNotice }) {\r\n  return (\r\n    <CSSTransition\r\n      timeout={250}\r\n      classNames={slideNoticeTransition}\r\n      in={apearNotice}\r\n      unmountOnExit\r\n    >\r\n      <Container>\r\n        <Text>{message}</Text>\r\n      </Container>\r\n    </CSSTransition>\r\n  );\r\n}\r\n\r\nexport default Notification;\r\n","import React from 'react';\r\nimport styled, { css } from 'styled-components';\r\nimport { Formik } from 'formik';\r\nimport Notification from './Notification';\r\n\r\nconst Form = styled.form`\r\n  margin-bottom: 3.4rem;\r\n  max-width: 54rem;\r\n  box-shadow: ${props => props.shadow};\r\n  padding: 1.4rem 1.6rem;\r\n  display: flex;\r\n  flex-flow: column wrap;\r\n  justify-content: center;\r\n  background-color: snow;\r\n`;\r\n\r\nconst Label = styled.label`\r\n  font-size: 2.4rem;\r\n  cursor: pointer;\r\n  ${props =>\r\n    props.error &&\r\n    css`\r\n      color: red;\r\n    `}\r\n`;\r\n\r\nconst Input = styled.input`\r\n  font-size: 2.2rem;\r\n  width: 100%;\r\n  margin-bottom: 2rem;\r\n  padding: 1.4rem 1.2rem 1.2rem;\r\n  border-radius: 0.6rem;\r\n  background-color: ${props => props.backGroundColor};\r\n\r\n  &:focus {\r\n    border-color: #1d2bcc;\r\n  }\r\n\r\n  ${props =>\r\n    props.isValid &&\r\n    css`\r\n      border: 0.3rem solid lightgreen;\r\n    `}\r\n  ${props =>\r\n    props.error &&\r\n    css`\r\n      border: 0.3rem solid red;\r\n    `}\r\n`;\r\n\r\nconst Button = styled.button`\r\n  display: block;\r\n  font-size: 2rem;\r\n  margin: 0 auto;\r\n  width: 100%;\r\n  padding: 1.8rem;\r\n  border-radius: 1rem;\r\n  background-color: #1d2bcc;\r\n  cursor: pointer;\r\n  color: snow;\r\n\r\n  &:hover,\r\n  &:focus {\r\n    background-color: #404fff;\r\n    color: snow;\r\n    border-color: #333333;\r\n    box-shadow: 0px 0px 10px 0px rgba(0, 0, 0, 0.75);\r\n    outline: none;\r\n  }\r\n\r\n  &:active {\r\n    background-color: #7883ff;\r\n  }\r\n`;\r\n\r\nconst ErrorText = styled.div`\r\n  color: red;\r\n  font-size: 2rem;\r\n  margin-top: -2rem;\r\n  margin-bottom: 2rem;\r\n`;\r\n\r\nfunction ContactForm({ notice, apearNotice, hasError, theme, addContact }) {\r\n  return (\r\n    <>\r\n      <Notification message={notice} apearNotice={apearNotice} />\r\n      {hasError && <Notification message={hasError} apearNotice={true} />}\r\n      <Formik\r\n        initialValues={{ name: '', number: '' }}\r\n        validate={values => {\r\n          const errors = {};\r\n          if (!values.name) {\r\n            errors.name = <ErrorText>Name is Required</ErrorText>;\r\n          }\r\n          return errors;\r\n        }}\r\n        onSubmit={(values, { setSubmitting, resetForm }) => {\r\n          addContact(values.name, values.number);\r\n          setSubmitting(false);\r\n          resetForm();\r\n        }}\r\n      >\r\n        {({\r\n          values,\r\n          errors,\r\n          touched,\r\n          handleChange,\r\n          handleBlur,\r\n          handleSubmit,\r\n          isSubmitting,\r\n        }) => (\r\n          <Form onSubmit={handleSubmit} shadow={theme.config.mainShadowBox}>\r\n            {errors.name ? (\r\n              <Label error>\r\n                Name\r\n                <Input\r\n                  error\r\n                  type=\"text\"\r\n                  name=\"name\"\r\n                  backGroundColor={theme.config.inputColor}\r\n                  onChange={handleChange}\r\n                  onBlur={handleBlur}\r\n                  value={values.name}\r\n                />\r\n                {errors.name && touched.name && errors.name}\r\n              </Label>\r\n            ) : (\r\n              <Label>\r\n                Name\r\n                {touched.name ? (\r\n                  <Input\r\n                    isValid\r\n                    type=\"text\"\r\n                    name=\"name\"\r\n                    backGroundColor={theme.config.inputColor}\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                    value={values.name}\r\n                  />\r\n                ) : (\r\n                  <Input\r\n                    type=\"text\"\r\n                    name=\"name\"\r\n                    backGroundColor={theme.config.inputColor}\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                    value={values.name}\r\n                  />\r\n                )}\r\n                {errors.name && touched.name && errors.name}\r\n              </Label>\r\n            )}\r\n\r\n            <Label>\r\n              Number\r\n              <Input\r\n                type=\"tel\"\r\n                name=\"number\"\r\n                backGroundColor={theme.config.inputColor}\r\n                onChange={handleChange}\r\n                onBlur={handleBlur}\r\n                value={values.number}\r\n              />\r\n              {errors.number && touched.number && errors.number}\r\n            </Label>\r\n            <Button type=\"submit\" disabled={isSubmitting}>\r\n              Add contact\r\n            </Button>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ContactForm;\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport withThemeContext from './hoc/withTheme';\r\nimport ContactsOperations from '../redux/contacts/contactsOperations';\r\nimport contactsSelectors from '../redux/contacts/contactsSelectors';\r\nimport ContactForm from './ContactForm';\r\n\r\nclass ContactFormContainer extends Component {\r\n  state = {\r\n    apearNotice: false,\r\n    notice: null,\r\n  };\r\n\r\n  addContact = (name, number) => {\r\n    const { contacts, onAddContact } = this.props;\r\n    const checkedForName = contacts.find(contact => name === contact.name);\r\n    if (checkedForName) {\r\n      this.setState({\r\n        notice: `${name} is already in contacts`,\r\n        apearNotice: true,\r\n      });\r\n\r\n      return setTimeout(\r\n        () =>\r\n          this.setState({\r\n            apearNotice: false,\r\n          }),\r\n        2400,\r\n      );\r\n    }\r\n    const numberCheck = /^[+]*[(]{0,1}[0-9]{1,4}[)]{0,1}[-\\s./0-9]*$/g;\r\n    const checkedNumber = numberCheck.test(number);\r\n    if (!checkedNumber) {\r\n      this.setState({\r\n        notice: 'Hey! This is not a real number :)',\r\n        apearNotice: true,\r\n      });\r\n      return setTimeout(\r\n        () =>\r\n          this.setState({\r\n            apearNotice: false,\r\n          }),\r\n        2400,\r\n      );\r\n    }\r\n    const newContact = {\r\n      name,\r\n      number,\r\n    };\r\n    onAddContact(newContact);\r\n  };\r\n  render() {\r\n    return (\r\n      <ContactForm\r\n        {...this.props}\r\n        addContact={this.addContact}\r\n        apearNotice={this.state.apearNotice}\r\n        notice={this.state.notice}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    contacts: contactsSelectors.getContacts(state),\r\n    hasError: contactsSelectors.getError(state),\r\n  };\r\n};\r\n\r\n// const mapDispatchToProps = dispatch => {\r\n//   return {\r\n//     onAddContact: obj => dispatch(ContactsActions.addContact(obj)),\r\n//   };\r\n// };\r\n\r\nconst mapDispatchToProps = {\r\n  onAddContact: ContactsOperations.addContact,\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps,\r\n)(withThemeContext(ContactFormContainer));\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport withThemeContext from './hoc/withTheme';\r\n\r\nconst Text = styled.p`\r\n  font-size: 3rem;\r\n  color: ${props => props.color};\r\n`;\r\n\r\nconst TextNotification = ({ message, theme }) => {\r\n  return <Text color={theme.config.messageColor}>{message}</Text>;\r\n};\r\n\r\nexport default withThemeContext(TextNotification);\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Item = styled.li`\r\n  max-width: 54rem;\r\n  box-shadow: ${props => props.shadow};\r\n  padding: 1.8rem;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  flex-wrap: wrap;\r\n  background-color: snow;\r\n  margin-bottom: 0.6rem;\r\n\r\n  &:last-of-type {\r\n    margin-bottom: none;\r\n  }\r\n`;\r\n\r\nconst Name = styled.p`\r\n  font-size: 2rem;\r\n  flex-basis: 52%;\r\n`;\r\n\r\nconst Number = styled.p`\r\n  font-size: 2rem;\r\n  flex-basis: 36%;\r\n`;\r\n\r\nconst Button = styled.button`\r\n  display: inline-block;\r\n  border: none;\r\n  font-size: 3rem;\r\n  flex-basis: 8%;\r\n  height: 3.8rem;\r\n  border-radius: 0.4rem;\r\n  background-color: #e82a2a;\r\n  cursor: pointer;\r\n  color: snow;\r\n\r\n  &:hover,\r\n  &:focus {\r\n    background-color: #b80000;\r\n    outline: none;\r\n  }\r\n\r\n  &:active {\r\n    background-color: #ff8080;\r\n  }\r\n`;\r\n\r\nfunction ListItem({ name, number, onRemoveContact, theme }) {\r\n  return (\r\n    <Item shadow={theme.config.mainShadowBox}>\r\n      <Name>{name}</Name> <Number>{number}</Number>\r\n      <Button type=\"button\" onClick={onRemoveContact}>\r\n        ×\r\n      </Button>\r\n    </Item>\r\n  );\r\n}\r\n\r\nexport default ListItem;\r\n","import { connect } from 'react-redux';\r\nimport withThemeContext from '../hoc/withTheme';\r\nimport contactsOperations from '../../redux/contacts/contactsOperations';\r\nimport contactsSelectors from '../../redux/contacts/contactsSelectors';\r\nimport ListItem from './ListItem';\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n  ...contactsSelectors.getTaskById(state, ownProps.id),\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => {\r\n  return {\r\n    onRemoveContact: () =>\r\n      dispatch(contactsOperations.removeContact(ownProps.id)),\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps,\r\n)(withThemeContext(ListItem));\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport PropTypes from 'prop-types';\r\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\r\nimport TextNotification from '../TextNotification';\r\nimport ListItem from './ListItemContainer';\r\nimport slideItemTransition from '../transitions/slideItem.module.css';\r\n\r\nconst List = styled.ul`\r\n  margin-bottom: 3rem;\r\n`;\r\n\r\nfunction ContactList({ contacts, visibleContacts }) {\r\n  return (\r\n    <>\r\n      <TransitionGroup component={List}>\r\n        {visibleContacts.map(({ id }) => (\r\n          <CSSTransition\r\n            key={id}\r\n            timeout={250}\r\n            classNames={slideItemTransition}\r\n          >\r\n            <ListItem id={id} />\r\n          </CSSTransition>\r\n        ))}\r\n      </TransitionGroup>\r\n      {contacts.length === 0 && (\r\n        <TextNotification message={'You have no contacts. Add some :)'} />\r\n      )}\r\n      {contacts.length > 1 && visibleContacts.length === 0 && (\r\n        <TextNotification message={'No contacts found :('} />\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.oneOfType([\r\n    PropTypes.arrayOf(\r\n      PropTypes.exact({\r\n        id: PropTypes.string.isRequired,\r\n        name: PropTypes.string.isRequired,\r\n        number: PropTypes.string.isRequired,\r\n      }),\r\n    ),\r\n    PropTypes.array,\r\n  ]),\r\n};\r\n\r\nexport default ContactList;\r\n","import { connect } from 'react-redux';\r\nimport contactsSelectors from '../../redux/contacts/contactsSelectors';\r\nimport ContactList from './ContactList';\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    contacts: contactsSelectors.getContacts(state),\r\n    visibleContacts: contactsSelectors.getVisibleContacts(state),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(ContactList);\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { CSSTransition } from 'react-transition-group';\r\nimport slideTitleTransition from './transitions/slideTitle.module.css';\r\nimport withThemeContext from './hoc/withTheme';\r\n\r\nconst HeaderContenet = styled.header`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n`;\r\n\r\nconst Title = styled.h1`\r\n  font-size: 4rem;\r\n  margin-bottom: 2rem;\r\n  color: ${props => props.color};\r\n`;\r\n\r\nconst LabelOfSwitch = styled.span`\r\n  top: -10px;\r\n  position: relative;\r\n  padding: 0px 10px;\r\n  font-size: 2.2rem;\r\n  font-weight: 500;\r\n  color: ${props => props.color};\r\n`;\r\n\r\nconst Label = styled.label`\r\n  position: relative;\r\n  display: inline-block;\r\n  width: 60px;\r\n  height: 34px;\r\n`;\r\n\r\nconst Input = styled.input`\r\n  display: none;\r\n`;\r\n\r\nconst Slider = styled.span`\r\n  position: absolute;\r\n  cursor: pointer;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  background-color: #ccc;\r\n  -webkit-transition: 0.4s;\r\n  transition: 0.4s;\r\n  border-radius: 34px;\r\n\r\n  &:before {\r\n    position: absolute;\r\n    content: '';\r\n    height: 26px;\r\n    width: 26px;\r\n    left: 4px;\r\n    bottom: 4px;\r\n    background-color: white;\r\n    -webkit-transition: 0.4s;\r\n    transition: 0.4s;\r\n    border-radius: 50%;\r\n  }\r\n\r\n  input:checked + & {\r\n    background-color: #2196f3;\r\n  }\r\n\r\n  input:focus + & {\r\n    box-shadow: 0 0 1px #2196f3;\r\n  }\r\n\r\n  input:checked + &:before {\r\n    transform: translateX(26px);\r\n  }\r\n`;\r\n\r\nfunction Header({ text, theme }) {\r\n  return (\r\n    <HeaderContenet>\r\n      <CSSTransition\r\n        timeout={500}\r\n        classNames={{ ...slideTitleTransition }}\r\n        in={true}\r\n        appear\r\n      >\r\n        <Title color={theme.config.contentColor}>{text}</Title>\r\n      </CSSTransition>\r\n      <div>\r\n        <LabelOfSwitch color={theme.config.contentColor}>\r\n          Theme: {theme.theme === 'light' ? 'Light' : 'Dark'}\r\n        </LabelOfSwitch>\r\n        <Label>\r\n          <Input\r\n            type=\"checkbox\"\r\n            checked={theme.theme === 'light'}\r\n            onChange={theme.toggleTheme}\r\n          />\r\n          <Slider></Slider>\r\n        </Label>\r\n      </div>\r\n    </HeaderContenet>\r\n  );\r\n}\r\n\r\nexport default withThemeContext(Header);\r\n","import React from 'react';\r\nimport Loader from 'react-loader-spinner';\r\nimport styled from 'styled-components';\r\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\r\n\r\nconst SpinnerContainer = styled.div`\r\n  background-color: rgba(0, 0, 0, 0.7);\r\n  top: 30%;\r\n  left: 50%;\r\n  transform: translateX(-50%);\r\n  position: fixed;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  border-radius: 50%;\r\n  z-index: 1100;\r\n  width: 18rem;\r\n  height: 18rem;\r\n  pointer-events: none;\r\n`;\r\n\r\nfunction Spinner() {\r\n  return (\r\n    <SpinnerContainer>\r\n      <Loader type=\"ThreeDots\" color=\"#ff1212\" height={144} width={144} />\r\n    </SpinnerContainer>\r\n  );\r\n}\r\n\r\nexport default Spinner;\r\n","import React from 'react';\nimport ThemeContext from '../contexts/ThemeContext';\nimport Filter from './FilterContainer';\nimport Layout from './Layout';\nimport ContactForm from './ContactFromContainer';\nimport ContactList from './ContactList/ContactListContainer';\nimport Header from './Header';\nimport Spinner from './Spinner';\nimport '../base.css';\n\nfunction App({ isLoadingContacts }) {\n  return (\n    <ThemeContext>\n      <Layout>\n        {isLoadingContacts && <Spinner />}\n        <Header text={'Phonebook'} />\n        <ContactForm />\n        <Filter />\n        <ContactList />\n      </Layout>\n    </ThemeContext>\n  );\n}\n\nexport default App;\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport contactsOperations from '../redux/contacts/contactsOperations';\r\nimport contactsSelectors from '../redux/contacts/contactsSelectors';\r\nimport App from './App';\r\n\r\nclass AppContainer extends Component {\r\n  componentDidMount() {\r\n    const { onFetchExistContacts } = this.props;\r\n    return onFetchExistContacts();\r\n  }\r\n\r\n  render() {\r\n    return <App {...this.props} />;\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    isLoadingContacts: contactsSelectors.getLoading(state),\r\n  };\r\n};\r\n\r\n// const mapDispatchToProps = dispatch => {\r\n//   return {\r\n//     addLocalContacts: array =>\r\n//       dispatch(ContactsActions.addLocalContacts(array)),\r\n//   };\r\n// };\r\n\r\nconst mapDispatchToProps = {\r\n  onFetchExistContacts: contactsOperations.fetchExistContacts,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AppContainer);\r\n","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport contactsActions from './contactsActions';\r\n\r\nconst fetchExist = (state, { payload }) => payload;\r\nconst addNewContact = (state, { payload }) => [...state, payload];\r\nconst removeContact = (state, { payload }) =>\r\n  state.filter(({ id }) => id !== payload);\r\n\r\nconst items = createReducer([], {\r\n  [contactsActions.fetchExistContactsSuccess]: fetchExist,\r\n  [contactsActions.addContactSuccess]: addNewContact,\r\n  [contactsActions.removeContactSuccess]: removeContact,\r\n});\r\n\r\nconst filter = createReducer('', {\r\n  [contactsActions.changeFilter]: (state, { payload }) => payload,\r\n});\r\n\r\nconst loading = createReducer(false, {\r\n  [contactsActions.fetchExistContactsRequest]: () => true,\r\n  [contactsActions.fetchExistContactsSuccess]: () => false,\r\n  [contactsActions.fetchExistContactsError]: () => false,\r\n  [contactsActions.addContactRequest]: () => true,\r\n  [contactsActions.addContactSuccess]: () => false,\r\n  [contactsActions.addContactError]: () => false,\r\n  [contactsActions.removeContactRequest]: () => true,\r\n  [contactsActions.removeContactSuccess]: () => false,\r\n  [contactsActions.removeContactError]: () => false,\r\n});\r\n\r\nconst error = createReducer(null, {\r\n  [contactsActions.fetchExistContactsError]: (_, { payload }) =>\r\n    payload.message,\r\n  [contactsActions.addContactError]: (_, { payload }) => payload.message,\r\n  [contactsActions.removeContactError]: (_, { payload }) => payload.message,\r\n  [contactsActions.fetchExistContactsRequest]: () => null,\r\n  [contactsActions.addContactRequest]: () => null,\r\n  [contactsActions.removeContactRequest]: () => null,\r\n});\r\n\r\nconst contactsReducer = combineReducers({\r\n  items,\r\n  filter,\r\n  loading,\r\n  error,\r\n});\r\n\r\nexport default contactsReducer;\r\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport contactsReducer from './contacts/contactsReducer';\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    contacts: contactsReducer,\r\n  },\r\n});\r\n\r\nexport default store;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport App from './components/AppContainer';\nimport store from './redux/store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.querySelector('#root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"scale_enter__2QD-O\",\"enterActive\":\"scale_enterActive__20NHL\",\"exit\":\"scale_exit__1197K\",\"exitActive\":\"scale_exitActive__3h2Y3\",\"exitDone\":\"scale_exitDone__mx8eU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"slideNotice_enter__d-djQ\",\"enterActive\":\"slideNotice_enterActive__1N8BK\",\"exit\":\"slideNotice_exit__1IJRc\",\"exitActive\":\"slideNotice_exitActive__Rkaqn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"slideItem_enter__1tZ71\",\"enterActive\":\"slideItem_enterActive___Pk0f\",\"exit\":\"slideItem_exit__1a5-h\",\"exitActive\":\"slideItem_exitActive__1PX5P\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"appear\":\"slideTitle_appear__WeraJ\",\"appearActive\":\"slideTitle_appearActive__2xDDO\"};"],"sourceRoot":""}